// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using back_end;

namespace back_end.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211020212741_Articulos1")]
    partial class Articulos1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("back_end.Entidades.AArchivados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contenido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("etiquetas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaLanzamiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("poster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AArchivados");
                });

            modelBuilder.Entity("back_end.Entidades.Articulos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("articulosGratis")
                        .HasColumnType("bit");

                    b.Property<bool>("articulosPaga")
                        .HasColumnType("bit");

                    b.Property<string>("contenido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("etiquetas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaLanzamiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("poster")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("back_end.Entidades.ArticulosCategorias", b =>
                {
                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("ArticulosId")
                        .HasColumnType("int");

                    b.HasKey("ArticuloId", "CategoriaId");

                    b.HasIndex("ArticulosId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("ArticulosCategorias");
                });

            modelBuilder.Entity("back_end.Entidades.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("back_end.Entidades.ArticulosCategorias", b =>
                {
                    b.HasOne("back_end.Entidades.Articulos", "Articulos")
                        .WithMany("ArticulosCategorias")
                        .HasForeignKey("ArticulosId");

                    b.HasOne("back_end.Entidades.Categoria", "Categoria")
                        .WithMany("ArticulosCategorias")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulos");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("back_end.Entidades.Articulos", b =>
                {
                    b.Navigation("ArticulosCategorias");
                });

            modelBuilder.Entity("back_end.Entidades.Categoria", b =>
                {
                    b.Navigation("ArticulosCategorias");
                });
#pragma warning restore 612, 618
        }
    }
}
